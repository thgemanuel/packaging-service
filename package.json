{
  "name": "packaging-service",
  "version": "0.0.1",
  "description": "API for optimal product packaging using box fitting algorithms",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --passWithNoTests --config ./src/jest-units.json",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage --config ./src/jest-units.json",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "typeorm": "ts-node ./node_modules/typeorm/cli",
    "typeorm:run-migrations": "npm run build && npm run typeorm migration:run -- -t each -d ./dist/infrastructure/persistence/postgres/typeormconfig.js",
    "typeorm:prod:run-migrations": "npm run typeorm migration:run -- -t each -d ./dist/infrastructure/persistence/postgres/typeormconfig.js",
    "typeorm:seed-migrations": "npm run seed:run -- -d ./dist/infrastructure/persistence/postgres/typeormconfig.js",
    "typeorm:generate-migration": "npm run build && npm run typeorm -- migration:create ./src/infrastructure/persistence/postgres/migrations/$npm_config_name",
    "typeorm:generate-seed": "npm run build && npm run typeorm -- -d ./dist/infrastructure/persistence/postgres/typeormconfig.js migration:create ./src/infrastructure/persistence/postgres/seeds/$npm_config_name",
    "typeorm:revert-migration": "npm run typeorm -- -d ./dist/infrastructure/persistence/postgres/typeormconfig.js migration:revert"
  },
  "dependencies": {
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.0.11",
    "@nestjs/config": "^4.0.0",
    "@nestjs/core": "^11.0.0",
    "@nestjs/platform-express": "^11.0.0",
    "@nestjs/swagger": "^11.0.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/typeorm": "^11.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "module-alias": "^2.2.3",
    "pg": "^8.13.2",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20",
    "typeorm-extension": "^3.6.3",
    "uuid": "^11.0.5"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.5",
    "@nestjs/schematics": "^11.0.2",
    "@nestjs/testing": "^11.0.11",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.17.17",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "husky": "^9.1.7",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "roots": [
      "src",
      "test"
    ],
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "testEnvironment": "node",
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "infrastructure/persistence/postgres/migrations",
      "infrastructure/persistence/postgres/seeds",
      "infrastructure/persistence/postgres/repositories",
      "src/domain/exceptions",
      "main.ts",
      "root.module.ts",
      "application.module.ts",
      "domain.module.ts",
      "index.ts",
      "instrument.ts",
      "test.setup.ts",
      "typeormconfig.ts"
    ],
    "moduleNameMapper": {
      "^@domain(.*)$": "<rootDir>/src/domain$1",
      "^@application(.*)$": "<rootDir>/src/application$1",
      "^@infrastructure(.*)$": "<rootDir>/src/infrastructure$1"
    }
  },
  "_moduleAliases": {
    "@root": ".",
    "@domain": "dist/domain",
    "@application": "dist/application",
    "@infrastructure": "dist/infrastructure"
  }
}
